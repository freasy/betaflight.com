"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7447],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,u=p["".concat(d,".").concat(f)]||p[f]||m[f]||o;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},22775:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},l="Migrating from baseflight",i={unversionedId:"development/Migrating from baseflight",id:"development/Migrating from baseflight",title:"Migrating from baseflight",description:"Procedure",source:"@site/docs/development/Migrating from baseflight.md",sourceDirName:"development",slug:"/development/Migrating from baseflight",permalink:"/docs/development/Migrating from baseflight",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"LED Strip",permalink:"/docs/development/LedStrip"},next:{title:"Mixer",permalink:"/docs/development/Mixer"}},d={},s=[{value:"Procedure",id:"procedure",level:2},{value:"CLI command differences from baseflight",id:"cli-command-differences-from-baseflight",level:2},{value:"gps_baudrate",id:"gps_baudrate",level:3},{value:"gps_type",id:"gps_type",level:3},{value:"serialrx_type",id:"serialrx_type",level:3},{value:"rssi_aux_channel",id:"rssi_aux_channel",level:3},{value:"failsafe_detect_threshold",id:"failsafe_detect_threshold",level:3},{value:"emfavoidance",id:"emfavoidance",level:3},{value:"yawrate",id:"yawrate",level:3},{value:"yawdeadband",id:"yawdeadband",level:3},{value:"midrc",id:"midrc",level:3},{value:"mincheck",id:"mincheck",level:3},{value:"maxcheck",id:"maxcheck",level:3},{value:"minthrottle",id:"minthrottle",level:3},{value:"maxthrottle",id:"maxthrottle",level:3},{value:"mincommand",id:"mincommand",level:3},{value:"deadband3d_low",id:"deadband3d_low",level:3},{value:"deadband3d_high",id:"deadband3d_high",level:3},{value:"deadband3d_throttle",id:"deadband3d_throttle",level:3},{value:"neutral3d",id:"neutral3d",level:3},{value:"alt_hold_throttle_neutral",id:"alt_hold_throttle_neutral",level:3},{value:"gimbal_flags",id:"gimbal_flags",level:3}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"migrating-from-baseflight"},"Migrating from baseflight"),(0,r.kt)("h2",{id:"procedure"},"Procedure"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"First ensure your main flight battery is disconnected or your props are off!")),(0,r.kt)("p",null,"Before flashing with cleanflight, dump your configs for each profile via the CLI and save to a text file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"profile 0\ndump\nprofile 1\ndump\nprofile 2\ndump\n")),(0,r.kt)("p",null,"Then after flashing cleanflight paste the output from each dump command into the cli, switching profiles as you go."),(0,r.kt)("p",null,"You'll note that some commands are not recognised by cleanflight when you do this. For the commands that are not recognised look\nup the new configuration options and choose appropriate values for the settings. See below for a list of differences."),(0,r.kt)("p",null,"Once you've done this for the first profile, save the config. Then verify your config is OK, e.g. features serial ports, etc.\nWhen you've verified the first profile is OK repeat for the other profiles."),(0,r.kt)("p",null,"It's also advisable to take screenshots of your AUX settings from baseflight configurator and then after re-applying the settings\nverify your aux config is correct - aux settings are not backwards compatible."),(0,r.kt)("h2",{id:"cli-command-differences-from-baseflight"},"CLI command differences from baseflight"),(0,r.kt)("p",null,"In general all CLI commands use underscore characters to separate words for consistency. In baseflight the format of CLI commands is somewhat haphazard."),(0,r.kt)("h3",{id:"gps_baudrate"},"gps_baudrate"),(0,r.kt)("p",null,"reason: new serial port configuration."),(0,r.kt)("p",null,"See ",(0,r.kt)("inlineCode",{parentName:"p"},"serial")," command."),(0,r.kt)("h3",{id:"gps_type"},"gps_type"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"gps_provider")," for consistency"),(0,r.kt)("h3",{id:"serialrx_type"},"serialrx_type"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"serialrx_provider")," for consistency"),(0,r.kt)("h3",{id:"rssi_aux_channel"},"rssi_aux_channel"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"rssi_channel")," for improved functionality"),(0,r.kt)("p",null,"Cleanflight supports using any RX channel for rssi. Baseflight only supports AUX1 to 4."),(0,r.kt)("p",null,"In Cleanflight a value of 0 disables the feature, a higher value indicates the channel number to read RSSI information from."),(0,r.kt)("p",null,"Example: to use RSSI on AUX1 in Cleanflight use ",(0,r.kt)("inlineCode",{parentName:"p"},"set rssi_channel = 5"),", since 5 is the first AUX channel (this is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"set rssi_aux_channel = 1")," in Baseflight)."),(0,r.kt)("h3",{id:"failsafe_detect_threshold"},"failsafe_detect_threshold"),(0,r.kt)("p",null,"reason: improved functionality"),(0,r.kt)("p",null,"See ",(0,r.kt)("inlineCode",{parentName:"p"},"rx_min_usec")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"rx_max_usec")," in Failsafe documentation."),(0,r.kt)("h3",{id:"emfavoidance"},"emfavoidance"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"emf_avoidance")," for consistency"),(0,r.kt)("h3",{id:"yawrate"},"yawrate"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"yaw_rate")," for consistency"),(0,r.kt)("h3",{id:"yawdeadband"},"yawdeadband"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"yaw_deadband")," for consistency"),(0,r.kt)("h3",{id:"midrc"},"midrc"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"mid_rc")," for consistency"),(0,r.kt)("h3",{id:"mincheck"},"mincheck"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"min_check")," for consistency"),(0,r.kt)("h3",{id:"maxcheck"},"maxcheck"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"max_check")," for consistency"),(0,r.kt)("h3",{id:"minthrottle"},"minthrottle"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"min_throttle")," for consistency"),(0,r.kt)("h3",{id:"maxthrottle"},"maxthrottle"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"max_throttle")," for consistency"),(0,r.kt)("h3",{id:"mincommand"},"mincommand"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"min_command")," for consistency"),(0,r.kt)("h3",{id:"deadband3d_low"},"deadband3d_low"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"3d_deadband_low")," for consistency"),(0,r.kt)("h3",{id:"deadband3d_high"},"deadband3d_high"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"3d_deadband_high")," for consistency"),(0,r.kt)("h3",{id:"deadband3d_throttle"},"deadband3d_throttle"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"3d_deadband_throttle")," for consistency"),(0,r.kt)("h3",{id:"neutral3d"},"neutral3d"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"3d_neutral")," for consistency"),(0,r.kt)("h3",{id:"alt_hold_throttle_neutral"},"alt_hold_throttle_neutral"),(0,r.kt)("p",null,"reason: renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"alt_hold_deadband")," for consistency"),(0,r.kt)("h3",{id:"gimbal_flags"},"gimbal_flags"),(0,r.kt)("p",null,"reason: seperation of features."),(0,r.kt)("p",null,"see ",(0,r.kt)("inlineCode",{parentName:"p"},"gimbal_mode")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"CHANNEL_FORWARDING")," feature"))}p.isMDXComponent=!0}}]);