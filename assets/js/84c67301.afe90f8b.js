"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7561],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return r?a.createElement(f,l(l({ref:t},c),{},{components:r})):a.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},78366:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const i={},l="Introduction",o={unversionedId:"wiki/archive/Hardware-Reference",id:"wiki/archive/Hardware-Reference",title:"Introduction",description:"This page provides details for hardware developers for future boards to ensure maximum compatibility with Betaflight.",source:"@site/docs/wiki/archive/Hardware-Reference.md",sourceDirName:"wiki/archive",slug:"/wiki/archive/Hardware-Reference",permalink:"/docs/wiki/archive/Hardware-Reference",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"HID-Joystick-Support",permalink:"/docs/wiki/archive/HID-Joystick-Support"},next:{title:"Howto-use-RSSI-with-Spektrum-SPM4649T-and-other-satellites",permalink:"/docs/wiki/archive/Howto-use-RSSI-with-Spektrum-SPM4649T-and-other-satellites"}},s={},p=[{value:"MPU (SPI versus I2C)",id:"mpu-spi-versus-i2c",level:2},{value:"MPU Interrrupt",id:"mpu-interrrupt",level:2},{value:"Blackbox Flash",id:"blackbox-flash",level:2},{value:"MCU",id:"mcu",level:2},{value:"Telemetry",id:"telemetry",level:2},{value:"IBus",id:"ibus",level:3}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"This page provides details for hardware developers for future boards to ensure maximum compatibility with Betaflight."),(0,n.kt)("h1",{id:"target-maintenance"},"Target Maintenance"),(0,n.kt)("p",null,"A hardware developer is responsible for developing, and maintaining, their target within Betaflight. Target files are being separated as much as possible to the main code so as to facilitate this."),(0,n.kt)("h1",{id:"adding-new-targets"},"Adding new targets"),(0,n.kt)("p",null,"If you are adding a new flight controller then:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Make any PRs against the ",(0,n.kt)("inlineCode",{parentName:"li"},"master"),"."),(0,n.kt)("li",{parentName:"ol"},"Don't change the ",(0,n.kt)("inlineCode",{parentName:"li"},"travis.yml")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"fake_travis_build.sh")," files - these are just for a subset off all builds to check PRs"),(0,n.kt)("li",{parentName:"ol"},"Add page to wiki describing the flight controller and giving a link to at least one supplier.")),(0,n.kt)("h1",{id:"hardware"},"Hardware"),(0,n.kt)("h2",{id:"mpu-spi-versus-i2c"},"MPU (SPI versus I2C)"),(0,n.kt)("h2",{id:"mpu-interrrupt"},"MPU Interrrupt"),(0,n.kt)("h2",{id:"blackbox-flash"},"Blackbox Flash"),(0,n.kt)("h2",{id:"mcu"},"MCU"),(0,n.kt)("p",null,"Excerpts from the data sheets / reference manuals that cover possible pin / timer / DMA assignments:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32f3_pins_timers_dma.pdf"},"STM32F3")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32f405_pins_timers_dma.pdf"},"STM32F405")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32f411_pins_timers_dma.pdf"},"STM32F411")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32f722_pins_timers_dma.pdf"},"STM32F722")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32f745_pins_timers_dma.pdf"},"STM32F745")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"reference/stm/stm32h743_pins.pdf"},"STM32H743")," (pins only)")),(0,n.kt)("h1",{id:"protocols"},"Protocols"),(0,n.kt)("h2",{id:"telemetry"},"Telemetry"),(0,n.kt)("h3",{id:"ibus"},"IBus"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"Ibus-telemetry"},"IBus telemetry specification")))}u.isMDXComponent=!0}}]);