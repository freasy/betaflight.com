"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3046],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),c=i,h=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},23929:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const r={},o="SITL",l={unversionedId:"development/SITL",id:"development/SITL",title:"SITL",description:"SITL in Gazebo",source:"@site/docs/development/SITL.mdx",sourceDirName:"development",slug:"/development/SITL",permalink:"/docs/development/SITL",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Receivers (RX)",permalink:"/docs/development/Rx"},next:{title:"SWD-debug-port-connection-conflicts.",permalink:"/docs/development/SWD-debug-port-connection-conflicts."}},p={},s=[{value:"SITL in Gazebo",id:"sitl-in-gazebo",level:2},{value:"Install Gazebo",id:"install-gazebo",level:3},{value:"Build Betaflight",id:"build-betaflight",level:3},{value:"Settings",id:"settings",level:3},{value:"Start and Run",id:"start-and-run",level:3},{value:"SITL in RealFlight 9",id:"sitl-in-realflight-9",level:2},{value:"Setup",id:"setup",level:3},{value:"SITL",id:"sitl-1",level:3},{value:"Customize",id:"customize",level:2}],d={toc:s};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sitl"},"SITL"),(0,i.kt)("h2",{id:"sitl-in-gazebo"},"SITL in Gazebo"),(0,i.kt)("p",null,"SITL (software in the loop) simulator allows you to run Betaflight without any hardware."),(0,i.kt)("h3",{id:"install-gazebo"},"Install Gazebo"),(0,i.kt)("p",null,"Official ",(0,i.kt)("a",{parentName:"p",href:"https://gazebosim.org/docs"},"Installation")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://ubuntu.com/blog/install-gazebo-for-ros-2-in-under-a-minute"},"https://ubuntu.com/blog/install-gazebo-for-ros-2-in-under-a-minute"))),(0,i.kt)("p",null,"Please also check ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/osrf/vehicle_gateway"},"Vehicle Gateway")),(0,i.kt)("h3",{id:"build-betaflight"},"Build Betaflight"),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"make TARGET=SITL")),(0,i.kt)("h3",{id:"settings"},"Settings"),(0,i.kt)("p",null,"To avoid the simulation speed slowing down, it is suggested to set some settings, shown below:"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"configuration")," page:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"ESC/Motor"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"PWM"),", disable ",(0,i.kt)("inlineCode",{parentName:"li"},"Motor PWM speed Sparted from PID speed")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"PID loop frequency")," as high as it can.")),(0,i.kt)("h3",{id:"start-and-run"},"Start and Run"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Start Betaflight: ",(0,i.kt)("inlineCode",{parentName:"li"},"./obj/main/betaflight_SITL.elf")),(0,i.kt)("li",{parentName:"ol"},"Start Gazebo: ",(0,i.kt)("inlineCode",{parentName:"li"},"gazebo --verbose ./iris_arducopter_demo.world")),(0,i.kt)("li",{parentName:"ol"},"Connect your transmitter and fly/test, used app to send ",(0,i.kt)("inlineCode",{parentName:"li"},"MSP_SET_RAW_RC"),", see ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/cs8425/msp-controller"},"code"),".")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Betaflight -> Gazebo ",(0,i.kt)("inlineCode",{parentName:"p"},"udp://127.0.0.1:9002"),"\nGazebo -> Betaflight ",(0,i.kt)("inlineCode",{parentName:"p"},"udp://127.0.0.1:9003")),(0,i.kt)("p",{parentName:"admonition"},"UARTx will bind on ",(0,i.kt)("inlineCode",{parentName:"p"},"tcp://127.0.0.1:576x")," when the port has been opened."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"eeprom.bin"),", size 8192 Byte, is for config saving.\nSize can be changed in ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main/target/SITL/pg.ld")," >> ",(0,i.kt)("inlineCode",{parentName:"p"},"__FLASH_CONFIG_Size"))),(0,i.kt)("h2",{id:"sitl-in-realflight-9"},"SITL in RealFlight 9"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.realflight.com/"},"RealFlight")," is one of the best commercial RC simulators with accurate airplane, helicopter, and multirotor simulations.\nArduPilot also offers ",(0,i.kt)("a",{parentName:"p",href:"https://ardupilot.org/dev/docs/sitl-with-realflight.html"},"RealFlight SITL"),".\nTo use it you may need to purchase it on ",(0,i.kt)("a",{parentName:"p",href:"https://store.steampowered.com/app/1070820/RealFlight_95S/"},"Steam")," or ",(0,i.kt)("a",{parentName:"p",href:"https://www.realflight.com/"},"offical website"),"."),(0,i.kt)("h3",{id:"setup"},"Setup"),(0,i.kt)("p",null,"To let Betaflight SITL work with RealFlight, you need Windows 10 or Windows 11 with WSL.\nUbuntu 20.04 in WSL2 on Windows 11 x64 is tested.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/xuhao1/RealFlightBridge"},"RealFlightBridge")," is also required."),(0,i.kt)("p",null,"On WSL2, you need to configure the Betaflight following ",(0,i.kt)("a",{parentName:"p",href:"/docs/development/Building-in-Windows"},"document here"),"."),(0,i.kt)("p",null,"Build Betaflight with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ make TARGET=SITL\n")),(0,i.kt)("p",null,"On Windows, download RealFlightBridge by"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/xuhao1/RealFlightBridge.git\n")),(0,i.kt)("p",null,"Import the quadcopter for RealFlight and Betaflight at ",(0,i.kt)("strong",{parentName:"p"},"models/Quadcopter X Betaflight - flightaxis_AV.RFX")," in RealFlightBridge. A detailed guide for improtanting can be found ",(0,i.kt)("a",{parentName:"p",href:"https://ardupilot.org/dev/docs/sitl-with-realflight.html"},"here"),".\nMoreover, update the setting of RealFlight to allow API.\n",(0,i.kt)("img",{src:n(2645).Z,width:"712",height:"482"})),(0,i.kt)("p",null,"You also need to prepare a controller for running SITL.\nWe recommend to use transmitter with OpenTX/EdgeTX as a game controller. In addition, mixers of channel 5 and 6 should be mapped to two switches for arming and changing mode.\n",(0,i.kt)("img",{src:n(82809).Z,width:"1702",height:"1276"})),(0,i.kt)("h3",{id:"sitl-1"},"SITL"),(0,i.kt)("p",null,"To running SITL, you may need to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open and select the newly improted model ",(0,i.kt)("strong",{parentName:"p"},"Quadcopter X Betaflight - flightaxis")," in RealFlight.\n",(0,i.kt)("img",{src:n(89889).Z,width:"883",height:"589"})),(0,i.kt)("p",{parentName:"li"},"You need to restart RealFlight after you ",(0,i.kt)("em",{parentName:"p"},"edit")," the model in RealFlight!")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Starting the RealFlightBridge in ",(0,i.kt)("strong",{parentName:"p"},"Windows")," by"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ python betaflight_bridge.py\n")),(0,i.kt)("p",{parentName:"li"},"You must start RealFlightBridge in Windows ",(0,i.kt)("strong",{parentName:"p"},"before")," start the Betaflight SITL.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Start the Betaflight SITL.\nFirst you need to get the Windows' IP in WSL.\nIn WSL enter"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ (ipconfig.exe | grep 'vEthernet (WSL)' -A4 | cut -d\":\" -f 2 | tail -n1 | sed -e 's/\\s*//g')\n172.19.32.1\n$ ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n    inet 172.19.41.192 netmask 255.255.240.0  broadcast 172.19.47.255\n    inet6 fe80::215:5dff:fea4:215d  prefixlen 64  scopeid 0x20<link>\n    ether 00:15:5d:a4:21:5d  txqueuelen 1000  (Ethernet)\n    RX packets 219079  bytes 32440158 (32.4 MB)\n    RX errors 0  dropped 0  overruns 0  frame 0\n    TX packets 145744  bytes 10533796 (10.5 MB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n")),(0,i.kt)("p",{parentName:"li"},"172.19.32.1 is the example output of your Windows IP and 172.19.41.192 is your WSL IP. ",(0,i.kt)("strong",{parentName:"p"},"These IPs change everytime you reboot the computer.")),(0,i.kt)("p",{parentName:"li"},"Then go to the Betaflight root and start the SITL with this IP."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd ~/develop/betaflight/\n$ ./obj/main/betaflight_SITL.elf 172.19.32.1\nThe SITL will output to IP 172.19.32.1:9002 (Gazebo) and 172.19.32.1:9001 (RealFlightBridge)\n[system]Init...\ninit PwmOut UDP link to gazebo 172.19.32.1:9002...0\ninit PwmOut UDP link to RF9 172.19.32.1:9001...0\nstart UDP server @9003...0\nstart UDP server for RC input @9004...0\n[FLASH_Unlock] loaded 'eeprom.bin', size = 32768 / 32768\n[timer]Init...\n[data]new fdm 136 t:182.834571 from 0.0.0.0:0\n[data]new rc 40: t:182.834571 AETR: 1498 1501 1105 1501 AUX1-4: 1100 1899 1899 1100\nbind port 5761 for UART1\nunusedPinsInit\n")),(0,i.kt)("p",{parentName:"li"},"Then you can open the Betaflight Configurator on ",(0,i.kt)("strong",{parentName:"p"},"Windows")," to connect to RealFlight via ",(0,i.kt)("strong",{parentName:"p"},"WSL IP"),".\n",(0,i.kt)("img",{src:n(16328).Z,width:"674",height:"148"})),(0,i.kt)("p",{parentName:"li"},"After connect to Betaflight you need to apply this ",(0,i.kt)("a",{target:"_blank",href:n(15452).Z},"DIFF file")," and set the arming switch with your controller.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Finally, you can arm and take-off the Quadcopter with Betaflight SITL in RealFlight with your controller."))),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(61764).Z,width:"3440",height:"1395"})),(0,i.kt)("h2",{id:"customize"},"Customize"),(0,i.kt)("p",null,"If you want to create your own model and extend the SITL, please refer to this ",(0,i.kt)("a",{parentName:"p",href:"http://www.knifeedge.com/KEmax/"},"guide")," and this ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/xuhao1/RealFlightBridge/blob/main/docs/realflight_protocol.md"},"document"),"."))}m.isMDXComponent=!0},15452:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/BTFL_quadcopter_rf9-1387c7b741d0c09e3aa5204064898767.txt"},61764:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/SITL_RF-4364d10f9c54b234d66517fd5441536a.jpg"},16328:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/betaflight-4975866f45fcaf9ca5688965afc778b4.jpg"},2645:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rf_settings-290f49efdc6d05da222434671af50d71.jpg"},89889:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/select-588af10f5f351e4fabb53328c78b6e58.jpg"},82809:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/transmitter-642cf7c6dd9b326729a39ea5d6ae0efb.jpg"}}]);